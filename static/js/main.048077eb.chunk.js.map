{"version":3,"sources":["logo.svg","Task1.js","Task2.js","Task3.js","Task4.js","Bonus.js","App.js","reportWebVitals.js","index.js"],"names":["Task1","useLayoutEffect","canvas","document","getElementById","ctx","getContext","clearRect","width","height","fillStyle","point","x","Math","floor","y","console","log","fillRect","className","id","Task2","pointInPolygon","require","polygon","Task3","Task4","Bonus","polygon1","polygon2","isInPolygon1","isInPolygon2","App","to","href","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.048077eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useLayoutEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Task1() {\n\nuseLayoutEffect(() => {\n    const points = [\n        [ 198619, 182327, 96947, 196635],\n        [ 190812, 198648, 90738, 190065],\n        [ 185989, 195751, 98451, 186084],\n        [ 183427, 187377, 81139, 194941],\n        [ 195132, 193197, 71631, 186256],\n        [ 190417, 198065, 77642, 182257],\n        [ 195056, 207627, 59446, 91838],\n        [ 183397, 151944, 111610, 111637],\n        [ 207692, 191928, 108065, 112038],\n        [ 190221, 192832, 115585, 104890],\n        [ 193719, 200159, 95359, 83465],\n        [ 205421, 178546, 57777, 118342],\n        [ 190282, 135992, 105312, 83259],\n        [ 122317, 180897, 116984, 42136],\n        [ 186234, 147115, 21118, 52353],\n        [ 215352, 191865, 35746, 104579],\n        [ 127227, 190625, 58608, 126068],\n        [ 154717, 200857, 66317, 67820],\n        [ 87551, 88180, 99411, 116278],\n        [ 70234, 118126, 66264, 79860],\n        [ 83333, 106316, 55046, 136022],\n        [ 111130, 101929, 29539, 42758],\n        [ 59423, 70765, 82492, 59081],\n        [ 66899, 111391, 119097, 50261],\n        [ 84508, 81086, 131670, 121690],\n        [ 106041, 68309, 29146, 39835],\n\n        [ 76734, 103062, 27210, 85928],\n        [ 105879, 56701, 129143, 136780],\n        [ 86379, 91427, 137619, 58351],\n        [ 89941, 51729, 51592, 107206]\n    ]\n    const canvas = document.getElementById(\"canvas1\")\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    ctx.fillStyle = 'white';\n\n    for( let point of points) {\n        let x = Math.floor(point[0] * 400 / 250000);\n        let y = 400 - Math.floor(point[1] * 400 / 250000);\n        console.log('x', x);\n        console.log('y', y);\n        ctx.fillRect(x, y, 3, 3);\n        console.log(\"point\", point)\n    }\n    \n    \n})\n    \n\n    return (\n        <div>\n            <h1>TASK 1</h1>\n            <canvas className = \"canvas1\" id=\"canvas1\" width=\"400\" height=\"400\"/>\n        </div>\n        \n    )\n}\n\nexport default Task1;","import React, { useLayoutEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Task2() {\n\nuseLayoutEffect(() => {\n    const points = [\n        [ 198619, 182327, 96947, 196635],\n        [ 190812, 198648, 90738, 190065],\n        [ 185989, 195751, 98451, 186084],\n        [ 183427, 187377, 81139, 194941],\n        [ 195132, 193197, 71631, 186256],\n        [ 190417, 198065, 77642, 182257],\n        [ 195056, 207627, 59446, 91838],\n        [ 183397, 151944, 111610, 111637],\n        [ 207692, 191928, 108065, 112038],\n        [ 190221, 192832, 115585, 104890],\n        [ 193719, 200159, 95359, 83465],\n        [ 205421, 178546, 57777, 118342],\n        [ 190282, 135992, 105312, 83259],\n        [ 122317, 180897, 116984, 42136],\n        [ 186234, 147115, 21118, 52353],\n        [ 215352, 191865, 35746, 104579],\n        [ 127227, 190625, 58608, 126068],\n        [ 154717, 200857, 66317, 67820],\n        [ 87551, 88180, 99411, 116278],\n        [ 70234, 118126, 66264, 79860],\n        [ 83333, 106316, 55046, 136022],\n        [ 111130, 101929, 29539, 42758],\n        [ 59423, 70765, 82492, 59081],\n        [ 66899, 111391, 119097, 50261],\n        [ 84508, 81086, 131670, 121690],\n        [ 106041, 68309, 29146, 39835],\n\n        [ 76734, 103062, 27210, 85928],\n        [ 105879, 56701, 129143, 136780],\n        [ 86379, 91427, 137619, 58351],\n        [ 89941, 51729, 51592, 107206]\n    ]\n    const canvas = document.getElementById(\"canvas1\")\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    ctx.fillStyle = 'white';\n\n    var pointInPolygon = require('point-in-polygon');\n\n    let polygon = [\n        [\n            200000,\n            100000\n            ],\n            [\n            230000,\n            180000\n            ],\n            [\n            200000,\n            200000\n            ],\n            [\n            200000,\n            230000\n            ],\n            [\n            110000,\n            220000\n            ],\n            [\n            100000,\n            180000\n            ]\n    ]\n\n    for( let point of points) {\n        let x = Math.floor(point[0] * 400 / 250000);\n        let y = 400 - Math.floor(point[1] * 400 / 250000);\n\n        if (pointInPolygon([point[0], point[1]], polygon)) {\n            ctx.fillStyle = 'red';\n            ctx.fillRect(x, y, 3, 3);\n        } else {\n            ctx.fillStyle = 'white';\n            ctx.fillRect(x, y, 3, 3);\n        }\n        \n        console.log(\"point\", point)\n    }\n    \n    \n})\n    \n\n    return (\n\n        <div>\n            <h1>TASK 2</h1>\n            <canvas className = \"canvas1\" id=\"canvas1\" width=\"400\" height=\"400\"/>\n        </div>\n    )\n}\n\nexport default Task2;","import React, { useLayoutEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Task3() {\n\nuseLayoutEffect(() => {\n    const points = [\n        [ 198619, 182327, 96947, 196635],\n        [ 190812, 198648, 90738, 190065],\n        [ 185989, 195751, 98451, 186084],\n        [ 183427, 187377, 81139, 194941],\n        [ 195132, 193197, 71631, 186256],\n        [ 190417, 198065, 77642, 182257],\n        [ 195056, 207627, 59446, 91838],\n        [ 183397, 151944, 111610, 111637],\n        [ 207692, 191928, 108065, 112038],\n        [ 190221, 192832, 115585, 104890],\n        [ 193719, 200159, 95359, 83465],\n        [ 205421, 178546, 57777, 118342],\n        [ 190282, 135992, 105312, 83259],\n        [ 122317, 180897, 116984, 42136],\n        [ 186234, 147115, 21118, 52353],\n        [ 215352, 191865, 35746, 104579],\n        [ 127227, 190625, 58608, 126068],\n        [ 154717, 200857, 66317, 67820],\n        [ 87551, 88180, 99411, 116278],\n        [ 70234, 118126, 66264, 79860],\n        [ 83333, 106316, 55046, 136022],\n        [ 111130, 101929, 29539, 42758],\n        [ 59423, 70765, 82492, 59081],\n        [ 66899, 111391, 119097, 50261],\n        [ 84508, 81086, 131670, 121690],\n        [ 106041, 68309, 29146, 39835],\n\n        [ 76734, 103062, 27210, 85928],\n        [ 105879, 56701, 129143, 136780],\n        [ 86379, 91427, 137619, 58351],\n        [ 89941, 51729, 51592, 107206]\n    ]\n    const canvas = document.getElementById(\"canvas1\")\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    ctx.fillStyle = 'white';\n\n    var pointInPolygon = require('point-in-polygon');\n\n    let polygon = [\n        [\n            200000,\n            100000\n            ],\n            [\n            230000,\n            180000\n            ],\n            [\n            200000,\n            200000\n            ],\n            [\n            200000,\n            230000\n            ],\n            [\n            110000,\n            220000\n            ],\n            [\n            100000,\n            180000\n            ]\n    ]\n\n    for( let point of points) {\n        let x = Math.floor(point[3] * 400 / 250000);\n        let y = 400 - Math.floor(point[2] * 400 / 250000);\n\n        if (pointInPolygon([point[0], point[1]], polygon)) {\n            ctx.fillStyle = 'red';\n            ctx.fillRect(x, y, 3, 3);\n        }\n        \n        console.log(\"point\", point)\n    }\n    \n    \n})\n    \n\n    return (\n\n        <div>\n            <h1>TASK 3</h1>\n            <canvas className = \"canvas1\" id=\"canvas1\" width=\"400\" height=\"400\"/>\n        </div>\n    )\n}\n\nexport default Task3;","import React, { useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Task4() {\n\nuseLayoutEffect(() => {\n    const points = [\n        [ 198619, 182327, 96947, 196635],\n        [ 190812, 198648, 90738, 190065],\n        [ 185989, 195751, 98451, 186084],\n        [ 183427, 187377, 81139, 194941],\n        [ 195132, 193197, 71631, 186256],\n        [ 190417, 198065, 77642, 182257],\n        [ 195056, 207627, 59446, 91838],\n        [ 183397, 151944, 111610, 111637],\n        [ 207692, 191928, 108065, 112038],\n        [ 190221, 192832, 115585, 104890],\n        [ 193719, 200159, 95359, 83465],\n        [ 205421, 178546, 57777, 118342],\n        [ 190282, 135992, 105312, 83259],\n        [ 122317, 180897, 116984, 42136],\n        [ 186234, 147115, 21118, 52353],\n        [ 215352, 191865, 35746, 104579],\n        [ 127227, 190625, 58608, 126068],\n        [ 154717, 200857, 66317, 67820],\n        [ 87551, 88180, 99411, 116278],\n        [ 70234, 118126, 66264, 79860],\n        [ 83333, 106316, 55046, 136022],\n        [ 111130, 101929, 29539, 42758],\n        [ 59423, 70765, 82492, 59081],\n        [ 66899, 111391, 119097, 50261],\n        [ 84508, 81086, 131670, 121690],\n        [ 106041, 68309, 29146, 39835],\n\n        [ 76734, 103062, 27210, 85928],\n        [ 105879, 56701, 129143, 136780],\n        [ 86379, 91427, 137619, 58351],\n        [ 89941, 51729, 51592, 107206]\n    ]\n    const canvas = document.getElementById(\"canvas1\")\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    ctx.fillStyle = 'white';\n\n    var pointInPolygon = require('point-in-polygon');\n\n    let polygon = [\n    [170000, 50000],\n    [220000, 45000],\n    [220000, 110000],\n    [170000, 115000]\n    ]\n\n    for( let point of points) {\n        let x = Math.floor(point[3] * 400 / 250000);\n        let y = 400 - Math.floor(point[2] * 400 / 250000);\n\n        if (pointInPolygon([point[3], point[2]], polygon)) {\n            ctx.fillStyle = 'green';\n            ctx.fillRect(x, y, 3, 3);\n        }\n        \n        console.log(\"point\", point)\n    }\n    \n    \n})\n    \n\n    return (\n\n        <div>\n            <h1>TASK 3</h1>\n            <canvas className = \"canvas1\" id=\"canvas1\" width=\"400\" height=\"400\"/>\n        </div>\n    )\n}\n\nexport default Task4;","import React, { useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Bonus() {\n\nuseLayoutEffect(() => {\n    const points = [\n        [ 198619, 182327, 96947, 196635],\n        [ 190812, 198648, 90738, 190065],\n        [ 185989, 195751, 98451, 186084],\n        [ 183427, 187377, 81139, 194941],\n        [ 195132, 193197, 71631, 186256],\n        [ 190417, 198065, 77642, 182257],\n        [ 195056, 207627, 59446, 91838],\n        [ 183397, 151944, 111610, 111637],\n        [ 207692, 191928, 108065, 112038],\n        [ 190221, 192832, 115585, 104890],\n        [ 193719, 200159, 95359, 83465],\n        [ 205421, 178546, 57777, 118342],\n        [ 190282, 135992, 105312, 83259],\n        [ 122317, 180897, 116984, 42136],\n        [ 186234, 147115, 21118, 52353],\n        [ 215352, 191865, 35746, 104579],\n        [ 127227, 190625, 58608, 126068],\n        [ 154717, 200857, 66317, 67820],\n        [ 87551, 88180, 99411, 116278],\n        [ 70234, 118126, 66264, 79860],\n        [ 83333, 106316, 55046, 136022],\n        [ 111130, 101929, 29539, 42758],\n        [ 59423, 70765, 82492, 59081],\n        [ 66899, 111391, 119097, 50261],\n        [ 84508, 81086, 131670, 121690],\n        [ 106041, 68309, 29146, 39835],\n\n        [ 76734, 103062, 27210, 85928],\n        [ 105879, 56701, 129143, 136780],\n        [ 86379, 91427, 137619, 58351],\n        [ 89941, 51729, 51592, 107206]\n    ]\n    const canvas = document.getElementById(\"canvas1\")\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    ctx.fillStyle = 'white';\n\n    var pointInPolygon = require('point-in-polygon');\n\n\n    let polygon1 = [\n        [\n            200000,\n            100000\n            ],\n            [\n            230000,\n            180000\n            ],\n            [\n            200000,\n            200000\n            ],\n            [\n            200000,\n            230000\n            ],\n            [\n            110000,\n            220000\n            ],\n            [\n            100000,\n            180000\n            ]\n    ]\n\n    let polygon2 = [\n    [170000, 50000],\n    [220000, 45000],\n    [220000, 110000],\n    [170000, 115000]\n    ]\n\n\n\n    for( let point of points) {\n        let x = Math.floor(point[0] * 400 / 250000);\n        let y = 400 - Math.floor(point[1] * 400 / 250000);\n\n        let isInPolygon1 = pointInPolygon([point[0], point[1]], polygon1);\n        let isInPolygon2 = pointInPolygon([point[3], point[2]], polygon2)\n\n        if ( isInPolygon1) {\n            if(isInPolygon2){\n                ctx.fillStyle = 'green';\n                ctx.fillRect(x, y, 3, 3);\n            } else {\n                ctx.fillStyle = 'red';\n                ctx.fillRect(x, y, 3, 3);\n            }\n            \n            \n        } \n        \n        \n        else {\n            ctx.fillStyle = 'white';\n            ctx.fillRect(x, y, 3, 3);\n        }\n        \n        console.log(\"point\", point)\n    }\n    \n    \n})\n    \n\n    return (\n\n        <div>\n            <h1>BONUS TASK</h1>\n            <canvas className = \"canvas1\" id=\"canvas1\" width=\"400\" height=\"400\"/>\n        </div>\n    )\n}\n\nexport default Bonus;","import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Task1 from './Task1';\nimport Task2 from './Task2';\nimport Task3 from './Task3';\nimport Task4 from './Task4';\nimport Bonus from './Bonus';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n        <nav className=\"navbar\">\n        <Link to=\"/task1\"><a href=\"#\">Task 1</a></Link>\n        <Link to=\"/task2\"><a href=\"#\">Task 2</a></Link>\n        <Link to=\"/task3\"><a href=\"#\">Task 3</a></Link>\n        <Link to=\"/task4\"><a href=\"#\">Task 4</a></Link>\n        <Link to=\"/bonus\"><a href=\"#\">BONUS TASK</a></Link>\n        </nav>\n\n        <div className=\"separator\"></div>\n\n        <Switch>\n            <Route path=\"/task1\">\n              <Task1 />\n            </Route>\n            <Route path=\"/task2\">\n              <Task2 />\n            </Route>\n            <Route path=\"/task3\">\n              <Task3 />\n            </Route>\n            <Route path=\"/task4\">\n              <Task4 />\n            </Route>\n            <Route path=\"/bonus\">\n              <Bonus />\n            </Route>\n          </Switch>\n\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}